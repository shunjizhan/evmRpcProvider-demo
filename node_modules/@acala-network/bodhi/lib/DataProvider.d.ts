import type { BlockTag, Log, TransactionReceipt } from '@ethersproject/abstract-provider';
export declare abstract class AbstractDataProvider {
    abstract init(): Promise<void>;
    /**
     *
     * @param filter The filter to apply to the logs
     * @param resolveBlockNumber The block to retrieve the logs from, defaults
     * to the head
     * @returns A promise that resolves to an array of filtered logs
     */
    abstract getLogs(filter: any, resolveBlockNumber: (blockTag?: BlockTag | Promise<BlockTag>) => Promise<number | undefined>): Promise<Array<Log>>;
    /**
     * Get the transaction receipt for a transaction.
     * @param txHash The transaction hash to get the receipt for
     * @param resolveBlockNumber The block the transaction was resolved
     * @returns A promise resolving to the transaction's receipt
     */
    abstract getTransactionReceipt(txHash: string, resolveBlockNumber: (blockTag?: BlockTag | Promise<BlockTag>) => Promise<number | undefined>): Promise<TransactionReceipt>;
}
//# sourceMappingURL=DataProvider.d.ts.map